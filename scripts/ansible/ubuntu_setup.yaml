---

- name: Setup new host for next ansible playbooks
  hosts: all
  vars:
    - ansible_user: "root"
    - ansible_port: "22"
    - remote_username: "{{ inventory_hostname + '_' + 'user'}}"
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: "Create remote users accounts"
      user:
        name: "{{ remote_username }}"
        groups: 'admin'
        home: /home/{{ remote_username }}
        shell: /bin/bash
      when: ansible_distribution=='Ubuntu'
    
    - name: "Create remote users accounts"
      user:
        name: "{{ remote_username }}"
        groups: 'wheel'
        home: /home/{{ remote_username }}
        shell: /bin/bash
      when: ansible_distribution!='Ubuntu'

    - name: "Create .ssh dir"
      file:
        path: /home/{{ remote_username }}/.ssh
        state: directory
        owner: "{{ remote_username }}"
        group: "{{ remote_username }}"
        mode: '0700'

    - name: "Provide authorized_keys for ansible user"
      copy:
        src: files/authorized_keys
        dest: /home/{{ remote_username }}/.ssh/authorized_keys
        mode: '0700'
        owner: "{{ remote_username }}"
        group: "{{ remote_username }}"

    - name: "Allow admin users to sudo without a password (Ubuntu)"
      lineinfile:
        dest: "/etc/sudoers" # path: in version 2.3
        state: "present"
        regexp: "^%admin"
        line: "%admin ALL=(ALL) NOPASSWD: ALL"
      when: ansible_distribution=="Ubuntu"

    - name: "Allow admin users to sudo without a password (Fedora/CentOS)"
      lineinfile:
        dest: "/etc/sudoers" # path: in version 2.3
        state: "present"
        regexp: "^#%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
      when: ansible_facts['distribution'] == "Fedora" or 
            ansible_facts['distribution'] == "CentOS"

    - name: "Update host (Fedora/CentOS)"
      package:
        name: "*"
        state: latest
      when: ansible_facts['distribution'] == "Fedora" or 
            ansible_facts['distribution'] == "CentOS"
      tags: update

    - name: "Update host (Ubuntu)"
      apt:
        name: "*"
        state: latest
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_distribution=="Ubuntu"
      tags: update

    - name: Setup alternate SSH port
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^Port"
        line: "Port 2229"
      register: sshport_change

    - name: Add new ssh port to firewall (Fedora/CentOS)
      firewalld:
        port: 2229/tcp
        state: enabled
        permanent: true
      when: ansible_facts['distribution'] == "Fedora" or 
            ansible_facts['distribution'] == "CentOS"

    - name: Restart sshd service and firewall (Fedora/CentOS)
      service:
        name: "{{ item }}"
        state: restarted
      #when: sshport_change.changed
      with_items:
        - sshd
        - firewalld
      when: ansible_facts['distribution'] == "Fedora" or 
            ansible_facts['distribution'] == "CentOS"

    - name: Restart sshd service and firewall (Ubuntu)
      service:
        name: "{{ item }}"
        state: restarted
      #when: sshport_change.changed
      with_items:
        - sshd
      when: ansible_facts['distribution'] == "Ubuntu"     